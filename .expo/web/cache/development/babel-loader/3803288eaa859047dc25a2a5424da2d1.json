{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jaruga\\\\Desktop\\\\Download\\\\jb1hotel\\\\src\\\\screens\\\\Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Animated, { Easing } from \"react-native-reanimated\";\nimport { TapGestureHandler, State } from \"react-native-gesture-handler\";\nimport { RunTiming } from \"../libs/Animations\";\nimport Svg, { Image, Circle, ClipPath } from \"react-native-svg\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar Value = Animated.Value,\n    event = Animated.event,\n    block = Animated.block,\n    eq = Animated.eq,\n    cond = Animated.cond,\n    set = Animated.set,\n    Clock = Animated.Clock,\n    interpolate = Animated.interpolate,\n    Extrapolate = Animated.Extrapolate,\n    concat = Animated.concat;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"flex-end\"\n  },\n  signInButton: {\n    backgroundColor: \"white\",\n    height: 70,\n    marginHorizontal: 20,\n    borderRadius: 35,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginVertical: 5,\n    elevation: 1\n  },\n  textInput: {\n    height: 50,\n    borderRadius: 25,\n    borderWidth: 0.5,\n    marginVertical: 5,\n    marginHorizontal: 20,\n    paddingLeft: 10,\n    borderColor: \"rgba(0,0,0,0.2)\"\n  },\n  closeButton: {\n    height: 40,\n    width: 40,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: -20,\n    left: width / 2 - 20,\n    elevation: 1\n  }\n});\n\nvar Login = function Login() {\n  var buttonOpacity = new Value(1);\n  var onStateChange = event([{\n    nativeEvent: function nativeEvent(_ref) {\n      var state = _ref.state;\n      return block([cond(eq(state, State.END), set(buttonOpacity, RunTiming(new Clock(), 1, 0)))]);\n    }\n  }]);\n  var onCloseButton = event([{\n    nativeEvent: function nativeEvent(_ref2) {\n      var state = _ref2.state;\n      return block([cond(eq(state, State.END), set(buttonOpacity, RunTiming(new Clock(), 0, 1)))]);\n    }\n  }]);\n  var buttonY = interpolate(buttonOpacity, {\n    inputRange: [0, 1],\n    outputRange: [100, 0],\n    extrapolate: Extrapolate.CLAMP\n  });\n  var bgY = interpolate(buttonOpacity, {\n    inputRange: [0, 1],\n    outputRange: [-height / 2.8 - 50, 0],\n    extrapolate: Extrapolate.CLAMP\n  });\n  var textInputZIndex = interpolate(buttonOpacity, {\n    inputRange: [0, 1],\n    outputRange: [1, -1],\n    extrapolate: Extrapolate.CLAMP\n  });\n  var textInputY = interpolate(buttonOpacity, {\n    inputRange: [0, 1],\n    outputRange: [0, 100],\n    extrapolate: Extrapolate.CLAMP\n  });\n  var textInputOpacity = interpolate(buttonOpacity, {\n    inputRange: [0, 1],\n    outputRange: [1, 0],\n    extrapolate: Extrapolate.CLAMP\n  });\n  var rotateCross = interpolate(buttonOpacity, {\n    inputRange: [0, 1],\n    outputRange: [180, 360],\n    extrapolate: Extrapolate.CLAMP\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, React.createElement(Animated.View, {\n    style: _objectSpread(_objectSpread({}, StyleSheet.absoluteFill), {}, {\n      transform: [{\n        translateY: bgY\n      }]\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, React.createElement(Svg, {\n    height: height + 50,\n    width: width,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, React.createElement(ClipPath, {\n    id: \"clip\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, React.createElement(Circle, {\n    r: height + 50,\n    cx: width / 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  })), React.createElement(Image, {\n    href: require(\"../assets/bg.jpg\"),\n    height: height + 50,\n    width: width,\n    preserveAspectRatio: \"xMidYMid slice\",\n    clipPath: \"url(#clip)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: {\n      height: height / 2.8,\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, React.createElement(TapGestureHandler, {\n    onHandlerStateChange: onStateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: _objectSpread(_objectSpread({}, styles.signInButton), {}, {\n      opacity: buttonOpacity,\n      transform: [{\n        translateY: buttonY\n      }]\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"SIGN IN\"))), React.createElement(Animated.View, {\n    style: {\n      transform: [{\n        translateY: buttonY\n      }]\n    },\n    style: _objectSpread(_objectSpread({}, styles.signInButton), {}, {\n      backgroundColor: \"#2E71DC\",\n      opacity: buttonOpacity,\n      transform: [{\n        translateY: buttonY\n      }]\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      fontWeight: \"bold\",\n      color: \"white\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \"SIGN IN WITH FACEBOOK\")), React.createElement(Animated.View, {\n    style: _objectSpread(_objectSpread({\n      zIndex: textInputZIndex,\n      opacity: textInputOpacity,\n      transform: [{\n        translateY: textInputY\n      }],\n      height: height / 2.8\n    }, StyleSheet.absoluteFill), {}, {\n      top: null,\n      justifyContent: \"center\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, React.createElement(TapGestureHandler, {\n    onHandlerStateChange: onCloseButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, React.createElement(Animated.View, {\n    style: styles.closeButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, React.createElement(Animated.Text, {\n    style: {\n      fontSize: 15,\n      transform: [{\n        rotate: concat(rotateCross, \"deg\")\n      }]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, \"X\"))), React.createElement(TextInput, {\n    placeholder: \"EMAIL\",\n    style: styles.textInput,\n    placeholderTextColor: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"PASSWORD\",\n    style: styles.textInput,\n    placeholderTextColor: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }), React.createElement(Animated.View, {\n    style: styles.signInButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 20,\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, \"SIGN IN\")))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Jaruga/Desktop/Download/jb1hotel/src/screens/Login.js"],"names":["React","Component","useState","Animated","Easing","TapGestureHandler","State","RunTiming","Svg","Image","Circle","ClipPath","Dimensions","get","height","width","Value","event","block","eq","cond","set","Clock","interpolate","Extrapolate","concat","styles","StyleSheet","create","container","flex","justifyContent","signInButton","backgroundColor","marginHorizontal","borderRadius","alignItems","marginVertical","elevation","textInput","borderWidth","paddingLeft","borderColor","closeButton","position","top","left","Login","buttonOpacity","onStateChange","nativeEvent","state","END","onCloseButton","buttonY","inputRange","outputRange","extrapolate","CLAMP","bgY","textInputZIndex","textInputY","textInputOpacity","rotateCross","absoluteFill","transform","translateY","require","opacity","fontSize","fontWeight","color","zIndex","rotate"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { View, StyleSheet, Dimensions, Text, TextInput } from \"react-native\";\nimport Animated, { Easing } from \"react-native-reanimated\";\nimport { TapGestureHandler, State } from \"react-native-gesture-handler\";\nimport { RunTiming } from \"../libs/Animations\";\nimport Svg, { Image, Circle, ClipPath } from \"react-native-svg\";\n\nconst { height, width } = Dimensions.get(\"window\");\n\nconst {\n  Value,\n  event,\n  block,\n  eq,\n  cond,\n  set,\n  Clock,\n  interpolate,\n  Extrapolate,\n  concat,\n} = Animated;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n  },\n  signInButton: {\n    backgroundColor: \"white\",\n    height: 70,\n    marginHorizontal: 20,\n    borderRadius: 35,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginVertical: 5,\n    elevation: 1,\n  },\n  textInput: {\n    height: 50,\n    borderRadius: 25,\n    borderWidth: 0.5,\n    marginVertical: 5,\n    marginHorizontal: 20,\n    paddingLeft: 10,\n    borderColor: \"rgba(0,0,0,0.2)\",\n  },\n  closeButton: {\n    height: 40,\n    width: 40,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n    top: -20,\n    left: width / 2 - 20,\n    elevation: 1,\n  },\n});\n\nconst Login = () => {\n  const buttonOpacity = new Value(1);\n  const onStateChange = event([\n    {\n      nativeEvent: ({ state }) =>\n        block([\n          cond(\n            eq(state, State.END),\n            set(buttonOpacity, RunTiming(new Clock(), 1, 0))\n          ),\n        ]),\n    },\n  ]);\n\n  const onCloseButton = event([\n    {\n      nativeEvent: ({ state }) =>\n        block([\n          cond(\n            eq(state, State.END),\n            set(buttonOpacity, RunTiming(new Clock(), 0, 1))\n          ),\n        ]),\n    },\n  ]);\n\n  const buttonY = interpolate(buttonOpacity, {\n    inputRange: [0, 1],\n    outputRange: [100, 0],\n    extrapolate: Extrapolate.CLAMP,\n  });\n\n  const bgY = interpolate(buttonOpacity, {\n    inputRange: [0, 1],\n    outputRange: [-height / 2.8 - 50, 0],\n    extrapolate: Extrapolate.CLAMP,\n  });\n\n  const textInputZIndex = interpolate(buttonOpacity, {\n    inputRange: [0, 1],\n    outputRange: [1, -1],\n    extrapolate: Extrapolate.CLAMP,\n  });\n\n  const textInputY = interpolate(buttonOpacity, {\n    inputRange: [0, 1],\n    outputRange: [0, 100],\n    extrapolate: Extrapolate.CLAMP,\n  });\n\n  const textInputOpacity = interpolate(buttonOpacity, {\n    inputRange: [0, 1],\n    outputRange: [1, 0],\n    extrapolate: Extrapolate.CLAMP,\n  });\n\n  const rotateCross = interpolate(buttonOpacity, {\n    inputRange: [0, 1],\n    outputRange: [180, 360],\n    extrapolate: Extrapolate.CLAMP,\n  });\n\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={{ ...StyleSheet.absoluteFill, transform: [{ translateY: bgY }] }}\n      >\n        <Svg height={height + 50} width={width}>\n          <ClipPath id=\"clip\">\n            <Circle r={height + 50} cx={width / 2}></Circle>\n          </ClipPath>\n\n          <Image\n            href={require(\"../assets/bg.jpg\")}\n            height={height + 50}\n            width={width}\n            preserveAspectRatio=\"xMidYMid slice\"\n            clipPath=\"url(#clip)\"\n          />\n        </Svg>\n      </Animated.View>\n\n      <View style={{ height: height / 2.8, justifyContent: \"center\" }}>\n        <TapGestureHandler onHandlerStateChange={onStateChange}>\n          <Animated.View\n            style={{\n              ...styles.signInButton,\n              opacity: buttonOpacity,\n              transform: [{ translateY: buttonY }],\n            }}\n          >\n            <Text style={{ fontSize: 15, fontWeight: \"bold\" }}>SIGN IN</Text>\n          </Animated.View>\n        </TapGestureHandler>\n\n        <Animated.View\n          style={{ transform: [{ translateY: buttonY }] }}\n          style={{\n            ...styles.signInButton,\n            backgroundColor: \"#2E71DC\",\n            opacity: buttonOpacity,\n            transform: [{ translateY: buttonY }],\n          }}\n        >\n          <Text style={{ fontSize: 15, fontWeight: \"bold\", color: \"white\" }}>\n            SIGN IN WITH FACEBOOK\n          </Text>\n        </Animated.View>\n\n        <Animated.View\n          style={{\n            zIndex: textInputZIndex,\n            opacity: textInputOpacity,\n            transform: [{ translateY: textInputY }],\n            height: height / 2.8,\n            ...StyleSheet.absoluteFill,\n            top: null,\n            justifyContent: \"center\",\n          }}\n        >\n          <TapGestureHandler onHandlerStateChange={onCloseButton}>\n            <Animated.View style={styles.closeButton}>\n              <Animated.Text\n                style={{\n                  fontSize: 15,\n                  transform: [{ rotate: concat(rotateCross, \"deg\") }],\n                }}\n              >\n                X\n              </Animated.Text>\n            </Animated.View>\n          </TapGestureHandler>\n\n          <TextInput\n            placeholder=\"EMAIL\"\n            style={styles.textInput}\n            placeholderTextColor=\"black\"\n          />\n\n          <TextInput\n            placeholder=\"PASSWORD\"\n            style={styles.textInput}\n            placeholderTextColor=\"black\"\n          />\n\n          <Animated.View style={styles.signInButton}>\n            <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>SIGN IN</Text>\n          </Animated.View>\n        </Animated.View>\n      </View>\n    </View>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}