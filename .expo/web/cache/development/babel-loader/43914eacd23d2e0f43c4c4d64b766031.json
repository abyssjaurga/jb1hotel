{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jaruga\\\\Desktop\\\\Download\\\\jb1hotel\\\\App.js\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CacheImages from \"./AssetLoader\";\nimport { AppLoading } from \"expo\";\nimport Login from \"./src/screens/Login\";\n\nvar _loadAssetsAsync = function _loadAssetsAsync() {\n  var imageAssets;\n  return _regeneratorRuntime.async(function _loadAssetsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          imageAssets = CacheImages([require(\"./src/assets/bg.png\")]);\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Promise.all(_toConsumableArray(imageAssets)));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar App = function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isready = _useState2[0],\n      setIsready = _useState2[1];\n\n  if (!isready) {\n    return React.createElement(AppLoading, {\n      startAsync: _loadAssetsAsync,\n      onFinish: function onFinish() {\n        return setIsready(true);\n      },\n      onError: console.warn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(Login, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Jaruga/Desktop/Download/jb1hotel/App.js"],"names":["StatusBar","React","useState","CacheImages","AppLoading","Login","_loadAssetsAsync","imageAssets","require","Promise","all","App","isready","setIsready","console","warn"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,WAAP;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,KAAP;;AAGA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,UAAAA,WADiB,GACHJ,WAAW,CAAC,CAACK,OAAO,uBAAR,CAAD,CADR;AAAA;AAAA,2CAEjBC,OAAO,CAACC,GAAR,oBAAgBH,WAAhB,EAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;AAKA,IAAMI,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACcT,QAAQ,CAAC,KAAD,CADtB;AAAA;AAAA,MACTU,OADS;AAAA,MACAC,UADA;;AAGhB,MAAI,CAACD,OAAL,EAAc;AACZ,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEN,gBADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMO,UAAU,CAAC,IAAD,CAAhB;AAAA,OAFZ;AAGE,MAAA,OAAO,EAAEC,OAAO,CAACC,IAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAED,SAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAdD;;AAgBA,eAAeJ,GAAf","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport CacheImages from \"./AssetLoader\";\nimport { AppLoading } from \"expo\";\nimport Login from \"./src/screens/Login\";\n\n\nconst _loadAssetsAsync = async () => {\n  const imageAssets = CacheImages([require(\"./src/assets/bg.png\")]);\n  await Promise.all([...imageAssets]);\n};\n\nconst App = () => {\n  const [isready, setIsready] = useState(false);\n\n  if (!isready) {\n    return (\n      <AppLoading\n        startAsync={_loadAssetsAsync}\n        onFinish={() => setIsready(true)}\n        onError={console.warn}\n      />\n    );\n  }\n\n  return <Login />;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}